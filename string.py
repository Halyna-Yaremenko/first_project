
# print ('dHfeIufh'.lower())
# print ('dhfeiufh'.upper())
# print ('dhfeiufh'.isdigit())

# s = 'qwerty'
# print (s[-1])
# print (s[1:3])
# print (s[:3])
# print (s[2:])
# print (s[::-1])
# # print (s[2:5:-1])  
# print (s[5:2:-1])


# name = "Alisa"
# print (f'Hello, {name}! How are you?')


# Beginner level

# 1. Напишіть програму, яка приймає від користувача рядок, і відображає цей рядок у верхньому і нижньому регістрах.

# s = input ('Enter text: ')
# print (s.lower())
# print (s.upper())

# ---------------------------------------------------------------------

# 2. Скласти програму, яка запитує назву баскетбольної команди і повторює її на екрані зі словами: This is a champion!.

# name = input ('Enter name basketball team: ')
# print(f'{name}! This is a champion!')

# ---------------------------------------------------------------------

# 3. Дано натуральне число. Знайти число, що отримується при прочитанні його цифр справа наліво.

# number = int(input('Enter number: '))
# print (str(number)[::-1])

# ---------------------------------------------------------------------

# 4. Дано рядок. Змініть регістр символів в цьому рядку так, щоб перша буква кожного слова була великою, а інші літери - малими. (метод s.title

# s = input ('Enter text: ')
# print(s.title())

# ---------------------------------------------------------------------

# 5. Дано рядок. Визначити порядковий номер першої вказаної букви. Якщо такої літери немає, вивести нуль.

# text = input ('Enter text: ')
# letter = input ('Enter latter: ')

# if letter in text:
#     position = text.index(letter) + 1  
#     print("Serial number of the first letter:", position)
# else:
#     print(0)

# ---------------------------------------------------------------------

# Middle level

# 6. Напишіть програму, яка по введеному числу n від 1 до 9 виводить на екран n пінгвінів з відповідним номером - число від 1 до n. Зображення одного пінгвіна має розмір 5 x 9 символів, між двома сусідніми пінгвінами також є порожній (з пропусків) стовпець. Дозволяється вивести порожній стовпець після останнього пінгвіна. Для спрощення малювання скопіюйте пінгвіна із вихідних даних. Врахуйте, що виведення на екран виконується порядково, а не «попінгвінно».

# n = int(input('Enter number (1-9):  '))

# p1 = "    _~_    " 
# p2 = "   (o o)   "
# p3 = "  /  V  \\  " 
# p5 = "   ^^ ^^   " 

# print(p1 * n)
# print(p2 * n)
# print(p3 * n)

# nums = "1 2 3 4 5 6 7 8 9"[:2*n]

# # p4 = " /(  "  +  "  )\\  /(  ".join(nums.split()) +  "  )\\  "
# # print(p4)

# for i in range(1, n+1):
#     print (f" /(  {i}  )\\ ", end='')


# print('\n' + p5 * n)

# ---------------------------------------------------------------------

# 7. У рядку є кілька слів, розділених одним або декількома пропусками. Потрібно прибрати з тексту зайві пропуски: два і більше пропусків поспіль, а також всі пропуски на початку і в кінці рядка. На вхід програмі подається рядок, що складається не більше ніж з 255 символів. Надрукувати новий рядок.

# text = "    Beyond the green     swelling hills of the     Mittel Land rose mighty slopes of forest    up    to the lofty steeps of the Carpathians    themselves"

# clean = " ".join(text.split())
# print(clean)

#-------------------------------------------------------------------

# 8. Дано рядок, що складається з n цифр (тобто одноцифрових чисел), між якими стоїть n-1 знаків операцій, кожна з яких може бути або +, або -. Обчисліть значення цього виразу. Програма має надрукувати результат обчислення цього виразу.

# ex = input("Enter ex:\n")

# len_ex = len(ex)

# n = (len(ex) + 1) // 2

# 1 var
# print(int(ex[0]) + (1 if ex[1] == '+' else -1) * int(ex[2])+ (1 if ex[3] == '+' else -1) * int(ex[4]))

# 2 var
# sum = int(ex[0])
# for i in range (1, len(ex), 2):
#     sum += (1 if ex[i] == '+' else -1) * int(ex[i+1])
# print(sum)

# 3 var
# sum = int(ex[0])
# for i in range(1, len(ex)):
#     if ex[i] == "+":
#         sum += int(ex[i+1])
#     elif ex[i] == "-":
#         sum -= int(ex[i+1])
# print(sum)

# 4 var
# ex =  ex.replace("-", "+-")
# parts = ex.split("+")

# sum_ex = sum(map(int, parts))
# print(sum_ex)

# ---------------
# my_list = ["1", "2", 4, 7]

# for el in range(len(my_list)):
#     my_list[el] = str(my_list[el])
# print(my_list)

# new_list = list(map(int, my_list))
# print(new_list)
# -------------------

#-------------------------------------------------------------------------------------------------------------------------------------

# 9. Напишіть програму, на вхід якої даються чотири числа a, b, c і d, кожне у своєму рядку. Програма повинна вивести фрагмент таблиці множення для всіх чисел відрізка [a; b] на всі числа відрізка [c; d]. Числа a, b, c і d є натуральними і не перевищують 10, a ≤ b, c ≤ d. Дотримуйтесь формату виведення як у вихідних даних. Для поділу елементів всередині рядка використовуйте \t - символ табуляції. Зауважте, що лівим стовпчиком і верхнім рядком виводяться самі числа із заданих відрізків.

# a = int(input('Enter number, a: '))
# b = int(input('Enter number, b: '))
# c = int(input('Enter number, c: '))
# d = int(input('Enter number, d: '))

# print('\t', end='')  

# for j in range(c, d+1):
#     print(j, end='\t')
# print()

# for i in range(a, b+1):
#     print(i, end='\t')
#     for j in range(c, d+1):
#      print(i * j, end='\t')
#     print() 

#-------------------------------------------------------------------------------------------------------------------------------------

# 10. Напишіть програму для друку літери A за допомогою введеного користувачем символа.

# a = input('Enter symbol: ')

# print("   " + a*3)
# print("  " + a + "   " + a)
# print("  " + a + "   " + a)
# print("  " + a*5)
# print("  " + a + "   " + a)
# print("  " + a + "   " + a)

#-------------------------------------------------------------------------------------------------------------------------------------

# 11. Напишіть програму, яка визначає, чи є у введеному рядку десяткові цифри, і виводить найбільше число, яке можна скласти з цих цифр. Провідних нулів у числі бути не повинно (за винятком числа 0, запис якого містить рівно одну цифру). Гарантовано, що у рядку є принаймні одна цифра. Вхідний рядок містить довільні символи. Програма повинна вивести найбільше число, яке можна скласти з присутніх в рядку десяткових цифр.

# ex = input("Enter ex:\n")

# res = []

# for i in ex:
#     if i.isdigit():   
#         res.append(i) 

# res.sort(reverse=True)

# largest_number = ''.join(res)

# print (largest_number)
